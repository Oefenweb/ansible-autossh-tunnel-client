# tasks file
---
- name: facts | set
  ansible.builtin.set_fact:
    is_docker_guest: "{{ ansible_virtualization_role | default('host') == 'guest' and ansible_virtualization_type | default('none') == 'docker' }}"
  tags:
    - configuration
    - autossh-tunnel-client
    - autossh-tunnel-client-facts

- name: install package
  ansible.builtin.apt:
    name: "{{ autossh_tunnel_client_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
  tags:
    - configuration
    - autossh-tunnel-client
    - autossh-tunnel-client-install

- name: configure
  ansible.builtin.import_tasks: configure.yml
  tags:
    - configuration
    - autossh-tunnel-client
    - autossh-tunnel-client-configure

- name: service
  block:
    - name: service-initd
      ansible.builtin.import_tasks: service-initd.yml
  when: is_docker_guest
  tags:
    - configuration
    - autossh-tunnel-client
    - autossh-tunnel-client-service
    - autossh-tunnel-client-service-initd

- name: service
  block:
    - name: service upstart
      ansible.builtin.import_tasks: service-upstart.yml
      when: ansible_service_mgr != 'systemd'
      tags:
        - autossh-tunnel-client-service-upstart

    - name: service systemd
      ansible.builtin.import_tasks: service-systemd.yml
      when: ansible_service_mgr == 'systemd'
      tags:
        - autossh-tunnel-client-service-systemd
  when: not is_docker_guest
  tags:
    - configuration
    - autossh-tunnel-client
    - autossh-tunnel-client-service

- name: start and enable service
  ansible.builtin.service:
    name: autossh-tunnel-client
    state: "{{ service_default_state | default('started') }}"
    enabled: "{{ service_default_enabled | default(true) | bool }}"
  tags:
    - configuration
    - autossh-tunnel-client
    - autossh-tunnel-client-start-enable-service
